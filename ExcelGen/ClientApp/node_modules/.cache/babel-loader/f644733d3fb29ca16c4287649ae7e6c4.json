{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dima\\\\source\\\\repos\\\\ExcelGen\\\\ExcelGen\\\\ClientApp\\\\src\\\\components\\\\FetchData.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMouseEnter = () => {\n      this.state.isHovering = true;\n    };\n\n    this.handleMouseLeave = () => {\n      this.state.isHovering = false;\n    };\n\n    this.state = {\n      isHovering: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginTop: '5%'\n        },\n        id: \"tabelLabel\",\n        children: \"Excel Generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The page will give you opportunity to create excel file with disciplines. Try it!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.populateAnotherExcel(),\n        style: {\n          marginTop: '35%',\n          borderColor: 'black',\n          backgroundColor: this.state.isHovering ? 'black' : 'white',\n          color: this.state.isHovering ? 'white' : 'black',\n          borderRadius: '5px'\n        },\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        className: \"btn\",\n        children: \"Generate  Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  async populateExcel() {\n    const myHeaders = new Headers();\n    const myInit = {\n      method: 'POST',\n      headers: myHeaders,\n      mode: 'cors',\n      cache: 'default'\n    };\n    const myRequest = new Request('api/Discipline/excel', myInit);\n    const response = await fetch(myRequest);\n    console.log(await response.blob());\n  }\n\n  async populateAnotherExcel() {\n    // const downloadExcelLink = document.getElementById('downloadExcelLink');\n    // window.open('http://localhost:3000/api/Discipline/excelTry');\n    // const method = \"GET\";\n    //             const headers = {\n    //                 'Accept': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    //                 'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    //                 'Content-Disposition': 'attachment; fileName='\n    //             };\n    //             const options = {\n    //                 method,\n    //                 headers\n    //             };\n    //             const res = await fetch('api/Discipline/excelTry', options);\n    const downloadExcelResponse = await fetch('api/Discipline/excelTry');\n    let file = new Blob([await downloadExcelResponse.blob()], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    }); // let fileName =  await downloadExcelResponse.headers.get('Content-Disposition').split(';')[1].trim().split('=')[1];\n    // saveAs(file, \"TestExcel.xlsx\");\n    // const downloadExcelBlob = await downloadExcelResponse.blob();\n    // const downloadExcelObjectURL = URL.createObjectURL(downloadExcelBlob);\n    // downloadExcelLink.href = downloadExcelObjectURL;\n  }\n\n}","map":{"version":3,"names":["React","Component","FetchData","constructor","props","handleMouseEnter","state","isHovering","handleMouseLeave","render","marginTop","populateAnotherExcel","borderColor","backgroundColor","color","borderRadius","populateExcel","myHeaders","Headers","myInit","method","headers","mode","cache","myRequest","Request","response","fetch","console","log","blob","downloadExcelResponse","file","Blob","type"],"sources":["C:/Users/Dima/source/repos/ExcelGen/ExcelGen/ClientApp/src/components/FetchData.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {isHovering: false}\r\n  }\r\n\r\n  handleMouseEnter = () => {\r\n    this.state.isHovering = true;\r\n  };\r\n\r\n  handleMouseLeave = () => {\r\n    this.state.isHovering = false;\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        {/* <a id=\"downloadExcelLink\" download=\"excelFile.xlsx\" href=\"blob:http://localhost:3000/api/Discipline/excelTry\">Download Excel File</a> */}\r\n        <h1 style={{marginTop: '5%'}}  id=\"tabelLabel\" >Excel Generation</h1>\r\n        <p>The page will give you opportunity to create excel file with disciplines. Try it!!!</p>\r\n\r\n        <button \r\n        onClick={() => this.populateAnotherExcel()}\r\n        style={{marginTop: '35%',\r\n                borderColor: 'black',\r\n                backgroundColor: this.state.isHovering ? 'black' : 'white',\r\n                color: this.state.isHovering ? 'white' : 'black',\r\n                borderRadius: '5px'}} \r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseLeave={this.handleMouseLeave}\r\n        className='btn'>\r\n        Generate  Excel\r\n    </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateExcel() {\r\n    const myHeaders = new Headers();\r\n\r\n    const myInit = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      mode: 'cors',\r\n      cache: 'default'\r\n    };\r\n\r\n    const myRequest = new Request('api/Discipline/excel', myInit);\r\n    const response = await fetch(myRequest); \r\n    console.log(await response.blob());\r\n  }\r\n\r\n  async populateAnotherExcel() {\r\n    // const downloadExcelLink = document.getElementById('downloadExcelLink');\r\n    // window.open('http://localhost:3000/api/Discipline/excelTry');\r\n    // const method = \"GET\";\r\n    //             const headers = {\r\n    //                 'Accept': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    //                 'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    //                 'Content-Disposition': 'attachment; fileName='\r\n    //             };\r\n    //             const options = {\r\n    //                 method,\r\n    //                 headers\r\n    //             };\r\n    //             const res = await fetch('api/Discipline/excelTry', options);\r\n    const downloadExcelResponse = await fetch('api/Discipline/excelTry')\r\n      let file = new Blob( [await downloadExcelResponse.blob()], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      // let fileName =  await downloadExcelResponse.headers.get('Content-Disposition').split(';')[1].trim().split('=')[1];\r\n      // saveAs(file, \"TestExcel.xlsx\");\r\n    // const downloadExcelBlob = await downloadExcelResponse.blob();\r\n    // const downloadExcelObjectURL = URL.createObjectURL(downloadExcelBlob);\r\n    // downloadExcelLink.href = downloadExcelObjectURL;\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;EAEvCE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAKnBC,gBALmB,GAKA,MAAM;MACvB,KAAKC,KAAL,CAAWC,UAAX,GAAwB,IAAxB;IACD,CAPkB;;IAAA,KASnBC,gBATmB,GASA,MAAM;MACvB,KAAKF,KAAL,CAAWC,UAAX,GAAwB,KAAxB;IACD,CAXkB;;IAEjB,KAAKD,KAAL,GAAa;MAACC,UAAU,EAAE;IAAb,CAAb;EACD;;EAUDE,MAAM,GAAG;IAEP,oBACE;MAAA,wBAEE;QAAI,KAAK,EAAE;UAACC,SAAS,EAAE;QAAZ,CAAX;QAA+B,EAAE,EAAC,YAAlC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAKE;QACA,OAAO,EAAE,MAAM,KAAKC,oBAAL,EADf;QAEA,KAAK,EAAE;UAACD,SAAS,EAAE,KAAZ;UACCE,WAAW,EAAE,OADd;UAECC,eAAe,EAAE,KAAKP,KAAL,CAAWC,UAAX,GAAwB,OAAxB,GAAkC,OAFpD;UAGCO,KAAK,EAAE,KAAKR,KAAL,CAAWC,UAAX,GAAwB,OAAxB,GAAkC,OAH1C;UAICQ,YAAY,EAAE;QAJf,CAFP;QAOQ,YAAY,EAAE,KAAKV,gBAP3B;QAQQ,YAAY,EAAE,KAAKG,gBAR3B;QASA,SAAS,EAAC,KATV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAoBD;;EAEkB,MAAbQ,aAAa,GAAG;IACpB,MAAMC,SAAS,GAAG,IAAIC,OAAJ,EAAlB;IAEA,MAAMC,MAAM,GAAG;MACbC,MAAM,EAAE,MADK;MAEbC,OAAO,EAAEJ,SAFI;MAGbK,IAAI,EAAE,MAHO;MAIbC,KAAK,EAAE;IAJM,CAAf;IAOA,MAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAY,sBAAZ,EAAoCN,MAApC,CAAlB;IACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACH,SAAD,CAA5B;IACAI,OAAO,CAACC,GAAR,CAAY,MAAMH,QAAQ,CAACI,IAAT,EAAlB;EACD;;EAEyB,MAApBnB,oBAAoB,GAAG;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMoB,qBAAqB,GAAG,MAAMJ,KAAK,CAAC,yBAAD,CAAzC;IACE,IAAIK,IAAI,GAAG,IAAIC,IAAJ,CAAU,CAAC,MAAMF,qBAAqB,CAACD,IAAtB,EAAP,CAAV,EAAgD;MAAEI,IAAI,EAAE;IAAR,CAAhD,CAAX,CAfyB,CAgBzB;IACA;IACF;IACA;IACA;EACD;;AA3EsC"},"metadata":{},"sourceType":"module"}