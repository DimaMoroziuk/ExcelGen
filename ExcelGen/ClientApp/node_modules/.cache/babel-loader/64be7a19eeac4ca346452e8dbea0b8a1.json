{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dima\\\\source\\\\repos\\\\ExcelGen\\\\ExcelGen\\\\ClientApp\\\\src\\\\components\\\\FetchData.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMouseEnter = () => {\n      this.state.isHovering = true;\n    };\n\n    this.handleMouseLeave = () => {\n      this.state.isHovering = false;\n    };\n\n    this.state = {\n      isHovering: false\n    };\n  }\n\n  componentDidMount() {\n    this.SaveExcel();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginTop: '5%'\n        },\n        id: \"tabelLabel\",\n        children: \"Excel Generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The page will give you opportunity to create excel file with disciplines. Try it!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.populateExcel(),\n        style: {\n          marginTop: '35%',\n          borderColor: 'black',\n          backgroundColor: this.state.isHovering ? 'black' : 'white',\n          color: this.state.isHovering ? 'white' : 'black',\n          borderRadius: '5px'\n        },\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        className: \"btn\",\n        children: \"Generate  Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  async populateExcel() {\n    const downloadExcelResponse = await fetch('api/Discipline/excelGen');\n  }\n\n  async SaveExcel() {\n    const downloadExcelResponse = await fetch('api/Discipline/excelGenSaved');\n  }\n\n}","map":{"version":3,"names":["React","Component","FetchData","constructor","props","handleMouseEnter","state","isHovering","handleMouseLeave","componentDidMount","SaveExcel","render","marginTop","populateExcel","borderColor","backgroundColor","color","borderRadius","downloadExcelResponse","fetch"],"sources":["C:/Users/Dima/source/repos/ExcelGen/ExcelGen/ClientApp/src/components/FetchData.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {isHovering: false}\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.SaveExcel()\r\n  }\r\n\r\n  handleMouseEnter = () => {\r\n    this.state.isHovering = true;\r\n  };\r\n\r\n  handleMouseLeave = () => {\r\n    this.state.isHovering = false;\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        {/* <a id=\"downloadExcelLink\" download=\"excelFile.xlsx\" href=\"blob:http://localhost:3000/api/Discipline/excelTry\">Download Excel File</a> */}\r\n        <h1 style={{marginTop: '5%'}}  id=\"tabelLabel\" >Excel Generation</h1>\r\n        <p>The page will give you opportunity to create excel file with disciplines. Try it!!!</p>\r\n\r\n        <button \r\n        onClick={() => this.populateExcel()}\r\n        style={{marginTop: '35%',\r\n                borderColor: 'black',\r\n                backgroundColor: this.state.isHovering ? 'black' : 'white',\r\n                color: this.state.isHovering ? 'white' : 'black',\r\n                borderRadius: '5px'}} \r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseLeave={this.handleMouseLeave}\r\n        className='btn'>\r\n        Generate  Excel\r\n    </button>\r\n    {/* <a href = 'C:\\ExcelDemo.xlsx' download=\"foo.xlsx\" target=\"_blank\">Or try to use the link...</a> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateExcel() {\r\n    const downloadExcelResponse = await fetch('api/Discipline/excelGen');\r\n  }\r\n\r\n  async SaveExcel() {\r\n    const downloadExcelResponse = await fetch('api/Discipline/excelGenSaved');\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;EAEvCE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KASnBC,gBATmB,GASA,MAAM;MACvB,KAAKC,KAAL,CAAWC,UAAX,GAAwB,IAAxB;IACD,CAXkB;;IAAA,KAanBC,gBAbmB,GAaA,MAAM;MACvB,KAAKF,KAAL,CAAWC,UAAX,GAAwB,KAAxB;IACD,CAfkB;;IAEjB,KAAKD,KAAL,GAAa;MAACC,UAAU,EAAE;IAAb,CAAb;EACD;;EAEDE,iBAAiB,GAAG;IAClB,KAAKC,SAAL;EACD;;EAUDC,MAAM,GAAG;IAEP,oBACE;MAAA,wBAEE;QAAI,KAAK,EAAE;UAACC,SAAS,EAAE;QAAZ,CAAX;QAA+B,EAAE,EAAC,YAAlC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAKE;QACA,OAAO,EAAE,MAAM,KAAKC,aAAL,EADf;QAEA,KAAK,EAAE;UAACD,SAAS,EAAE,KAAZ;UACCE,WAAW,EAAE,OADd;UAECC,eAAe,EAAE,KAAKT,KAAL,CAAWC,UAAX,GAAwB,OAAxB,GAAkC,OAFpD;UAGCS,KAAK,EAAE,KAAKV,KAAL,CAAWC,UAAX,GAAwB,OAAxB,GAAkC,OAH1C;UAICU,YAAY,EAAE;QAJf,CAFP;QAOQ,YAAY,EAAE,KAAKZ,gBAP3B;QAQQ,YAAY,EAAE,KAAKG,gBAR3B;QASA,SAAS,EAAC,KATV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAqBD;;EAEkB,MAAbK,aAAa,GAAG;IACpB,MAAMK,qBAAqB,GAAG,MAAMC,KAAK,CAAC,yBAAD,CAAzC;EACD;;EAEc,MAATT,SAAS,GAAG;IAChB,MAAMQ,qBAAqB,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAzC;EACD;;AAlDsC"},"metadata":{},"sourceType":"module"}